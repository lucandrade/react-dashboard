{"version":3,"sources":["serviceWorker.js","Components/SideBar.js","Components/TopBar.js","Components/PageTitle.js","Components/Stats/Stat.js","Components/Stats/Stats.js","Components/Charts/Line.js","Components/Widgets/Widget.js","Components/Charts/Doughnut.js","Components/Charts/Bar.js","Components/Widgets/Widgets.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","SideBar","opened","className","TopBar","onToggleSideBar","onClick","onSubmit","e","preventDefault","type","placeholder","aria-label","aria-describedby","PageTitle","onRandomize","Stat","title","content","icon","withProgress","progress","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","CurrencyFormatter","value","format","code","precision","forwardRef","props","ref","useState","monthlyEarnings","setMonthlyEarnings","annualEarnings","setAnnualEarnings","tasks","setTasks","pendingRequests","setPendingRequests","useImperativeHandle","randomize","earnings","random","defaults","global","defaultFontFamily","DEFAULT_DATA","datasets","lineTension","backgroundColor","borderColor","pointRadius","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHitRadius","pointBorderWidth","DEFAULT_OPTIONS","maintainAspectRatio","layout","padding","scales","xAxes","time","unit","gridLines","display","drawBorder","yAxes","ticks","maxTicksLimit","callback","color","zeroLineColor","legend","tooltips","bodyFontColor","titleMarginBottom","titleFontColor","titleFontSize","borderWidth","xPadding","yPadding","displayColors","intersect","mode","caretPadding","callbacks","label","tooltipItem","chart","datasetLabel","datasetIndex","yLabel","Line","labels","data","addPadding","left","right","top","bottom","options","SIZES","threeQuarter","quarter","half","Widget","children","size","hoverBackgroundColor","hoverBorderColor","cutoutPercentage","Doughnut","backgroundColors","RandomColor","count","length","hue","hoverBackgroundColors","map","c","Color","darken","string","i","key","suggestedMin","suggestedMax","Bar","MONTHS","REVENUE_SOURCES","DIRECTORS","TEAMS","isMobile","setEarnings","revenueSources","setRevenueSources","directorsPerformance","setDirectorsPerformance","teamsPerformance","setTeamsPerformance","maxRevenueSource","newRevenueSources","r","newRevenueSource","App","statsRef","createRef","widgetsRef","setIsMobile","useEffect","onResize","document","documentElement","clientWidth","addEventListener","removeEventListener","id","current","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sKAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,iBChBS,SAASC,EAAT,GAA8B,IAAXC,EAAU,EAAVA,OAChC,OACE,wBAAIC,UAAS,wEAAoED,EAAqB,GAAZ,YACxF,0BAAMC,UAAU,wEACd,yBAAKA,UAAU,kCACb,uBAAGA,UAAU,uBAEf,yBAAKA,UAAU,2BAAf,YAAkD,oCAEpD,wBAAIA,UAAU,yBACd,wBAAIA,UAAU,yBACZ,0BAAMA,UAAU,YACd,uBAAGA,UAAU,gCACb,8CAGJ,wBAAIA,UAAU,0BChBL,SAASC,EAAT,GAAsC,IAApBC,EAAmB,EAAnBA,gBAC/B,OACE,yBAAKF,UAAU,4EACb,4BAAQA,UAAU,6CAA6CG,QAASD,GACtE,uBAAGF,UAAU,gBAEf,0BACEI,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBACjBN,UAAU,0FACV,yBAAKA,UAAU,eACb,2BAAOO,KAAK,OAAOP,UAAU,uCAAuCQ,YAAY,gBACzEC,aAAW,SAASC,mBAAiB,iBAC1C,yBAAKV,UAAU,sBACb,4BAAQA,UAAU,kBAAkBO,KAAK,UACvC,uBAAGP,UAAU,6BCdd,SAASW,EAAT,GAAqC,IAAhBC,EAAe,EAAfA,YAClC,OACE,yBAAKZ,UAAU,0DACb,wBAAIA,UAAU,yBAAd,aACA,4BACEO,KAAK,SACLP,UAAU,qDACVG,QAASS,GAHX,aAIY,uBAAGZ,UAAU,oDAEzB,4BACEO,KAAK,SACLP,UAAU,4DACVG,QAASS,GAHX,aAIY,uBAAGZ,UAAU,qD,mBCdhB,SAASa,EAAT,GAAuE,IAAvDN,EAAsD,EAAtDA,KAAMO,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,SACvE,OACE,yBAAKlB,UAAU,0BACb,yBAAKA,UAAS,2BAAsBO,EAAtB,uBACZ,yBAAKP,UAAU,aACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,YACb,yBACEA,UAAS,wCAAmCO,EAAnC,yBACRO,IAEDG,GACA,yBAAKjB,UAAU,0CACZe,GAGJE,GACC,yBAAKjB,UAAU,qCACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,+CAA+Ce,IAEhE,yBAAKf,UAAU,OACb,yBAAKA,UAAU,6BACb,yBACEA,UAAU,uBACVmB,KAAK,cACLC,MAAO,CAAEC,MAAM,GAAD,OAAKH,EAAL,MACdI,gBAAeJ,EACfK,gBAAc,IACdC,gBAAc,YAM1B,yBAAKxB,UAAU,YACb,uBAAGA,UAAS,cAASgB,EAAT,+BChC1B,IAAMS,EAAoB,SAAAC,GAAK,OAAIC,iBAAOD,EAAO,CAAEE,KAAM,MAAOC,UAAW,KA8C5DC,4BA5Cf,SAAeC,EAAOC,GAAM,IAAD,EACqBC,mBAAS,KAD9B,mBAClBC,EADkB,KACDC,EADC,OAEmBF,mBAAS,OAF5B,mBAElBG,EAFkB,KAEFC,EAFE,OAGCJ,mBAAS,IAHV,mBAGlBK,EAHkB,KAGXC,EAHW,OAIqBN,mBAAS,IAJ9B,mBAIlBO,EAJkB,KAIDC,EAJC,KAgBzB,OAVAC,8BAAoBV,GAAK,iBAAO,CAC9BW,UAD8B,WAE5B,IAAMC,EAAWC,iBAAO,IAAO,KAC/BV,EAAmBS,GACnBP,EAAkBO,EAAWC,iBAAO,EAAG,IACvCN,EAASM,iBAAO,EAAG,MACnBJ,EAAmBI,iBAAO,EAAG,UAK/B,yBAAK7C,UAAU,OACb,kBAACa,EAAD,CACEC,MAAM,qBACNC,QAASU,EAAkBS,GAC3BlB,KAAK,cACLT,KAAK,YACP,kBAACM,EAAD,CACEC,MAAM,oBACNC,QAASU,EAAkBW,GAC3BpB,KAAK,iBACLT,KAAK,YACP,kBAACM,EAAD,CACEI,cAAY,EACZC,SAAUoB,EACVxB,MAAM,QACNC,QAAO,UAAKuB,EAAL,KACPtB,KAAK,iBACLT,KAAK,SACP,kBAACM,EAAD,CACEC,MAAM,mBACNC,QAASyB,EACTxB,KAAK,cACLT,KAAK,gB,OC1CbuC,IAASC,OAAOC,kBAAoB,SAEpC,IAAMvB,EAAoB,SAAAC,GAAK,OAAIC,iBAAOD,EAAO,CAAEE,KAAM,MAAOC,UAAW,KAErEoB,EAAe,CACnBC,SAAU,CAAC,CACTC,YAAa,GACbC,gBAAiB,2BACjBC,YAAa,wBACbC,YAAa,EACbC,qBAAsB,wBACtBC,iBAAkB,wBAClBC,iBAAkB,EAClBC,0BAA2B,wBAC3BC,sBAAuB,wBACvBC,eAAgB,GAChBC,iBAAkB,KAIhBC,EAAkB,CACtBC,qBAAqB,EACrBC,OAAQ,CACNC,QAAS,IAEXC,OAAQ,CACNC,MAAO,CAAC,CACNC,KAAM,CACJC,KAAM,QAERC,UAAW,CACTC,SAAS,EACTC,YAAY,KAGhBC,MAAO,CAAC,CACNC,MAAO,CACLC,cAAe,EACfV,QAAS,GACTW,SAAUnD,GAEZ6C,UAAW,CACTO,MAAO,UACPC,cAAe,qBACfN,YAAY,MAIlBO,OAAQ,CACNR,SAAS,GAEXS,SAAU,CACR5B,gBAAiB,mBACjB6B,cAAe,UACfC,kBAAmB,GACnBC,eAAgB,UAChBC,cAAe,GACf/B,YAAa,UACbgC,YAAa,EACbC,SAAU,GACVC,SAAU,GACVC,eAAe,EACfC,WAAW,EACXC,KAAM,QACNC,aAAc,GACdC,UAAW,CACTC,MAAO,SAACC,EAAaC,GACnB,IAAMC,EAAeD,EAAM7C,SAAS4C,EAAYG,cAAcJ,OAAS,GACvE,MAAM,GAAN,OAAUG,EAAV,YAA0BvE,EAAkBqE,EAAYI,aAmCjDC,MA7Bf,YAAoD,IAApCrF,EAAmC,EAAnCA,MAAOsF,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAgBnC,OAfArD,EAAamD,OAASA,EACtBnD,EAAaC,SAAS,GAAG2C,MAAQ/E,EACjCmC,EAAaC,SAAS,GAAGmD,KAAOA,EAChCvC,EAAgBE,OAAOC,QAAWqC,EAK9B,CACFC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,OAAQ,GATqC,CAC7CH,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,GASR,yBAAK1G,UAAU,cACb,kBAAC,IAAD,CAAOqG,KAAMpD,EAAc0D,QAAS7C,MC9FpC8C,EAAQ,CACZC,aAAc,WACdC,QAAS,WACTC,KAAM,YAuBOC,MApBf,YAAwD,IAAtCC,EAAqC,EAArCA,SAAUnG,EAA2B,EAA3BA,MAA2B,IAApBoG,YAAoB,MAAb,UAAa,EACrD,OACE,yBAAKlH,UAAW4G,EAAMM,IACpB,yBAAKlH,UAAU,oBACb,yBAAKA,UAAU,+EACb,wBAAIA,UAAU,qCAAqCc,IAErD,yBAAKd,UAAU,aACZiH,M,kCCXLhE,EAAe,CACnBC,SAAU,CAAC,CACTE,gBAAiB,CAAC,UAAW,UAAW,WACxC+D,qBAAsB,CAAC,UAAW,UAAW,WAC7CC,iBAAkB,4BAIhBtD,EAAkB,CACtBC,qBAAqB,EACrBiB,SAAU,CACR5B,gBAAiB,mBACjB6B,cAAe,UACf5B,YAAa,UACbgC,YAAa,EACbC,SAAU,GACVC,SAAU,GACVC,eAAe,EACfG,aAAc,IAEhBZ,OAAQ,CACNR,SAAS,GAEX8C,iBAAkB,IAuCLC,MApCf,YAAqC,IAAjBlB,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAC1BpD,EAAamD,OAASA,EACtBnD,EAAaC,SAAS,GAAGmD,KAAOA,EAEhC,IAAMkB,EAAmBC,IAAY,CACnCC,MAAOrB,EAAOsB,OACdC,IAAK,WAGDC,EAAwBL,EAAiBM,KAAI,SAAAC,GAAC,OAAIC,IAAMD,GAAGE,OAAO,IAAKC,YAK7E,OAHAhF,EAAaC,SAAS,GAAGE,gBAAkBmE,EAC3CtE,EAAaC,SAAS,GAAGiE,qBAAuBS,EAG9C,oCACE,yBAAK5H,UAAU,aACb,kBAAC,IAAD,CAAOqG,KAAMpD,EAAc0D,QAAS7C,KAEtC,yBAAK9D,UAAU,0BACZoG,EAAOyB,KAAI,SAAChC,EAAOqC,GAAR,OACV,0BAAMC,IAAKtC,EAAO7F,UAAU,QAC1B,uBAAGA,UAAU,gBAAgBoB,MAAO,CAAEyD,MAAO0C,EAAiBW,MADhE,WAEOrC,EAFP,aAEiBQ,EAAK6B,GAFtB,YChDJpE,EAAkB,CACtBC,qBAAqB,EACrBG,OAAQ,CACNO,MAAO,CAAC,CACNF,SAAS,EACTG,MAAO,CACLC,cAAe,GACfyD,aAAc,EACdC,aAAc,IACdzD,SAAU,SAAAlD,GAAK,gBAAOA,EAAP,UAIrBsD,SAAU,CACRY,UAAW,CACTC,MAAO,SAACC,EAAaC,GACnB,IAAMC,EAAeD,EAAM7C,SAAS4C,EAAYG,cAAcJ,MAC9D,MAAM,GAAN,OAAUG,EAAV,cAA4BF,EAAYI,OAAxC,SAiCOoC,MA3Bf,YAAuC,IAAxBxH,EAAuB,EAAvBA,MAAOsF,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KACtBkB,EAAmBC,IAAY,CACnCC,MAAOrB,EAAOsB,OACdC,IAAK,WAGP7D,EAAgBkB,SAASY,UAAU9E,MAAQ,kBAAMA,GAEjD,IAAMoC,EAAWkD,EAAOyB,KAAI,SAAChC,EAAOqC,GAClC,MAAO,CACLrC,QACAzC,gBAAiBmE,EAAiBW,GAClC7E,YAAakE,EAAiBW,GAC9Bf,qBAAsBY,IAAMR,EAAiBW,IAAIF,OAAO,IAAKC,SAC7Db,iBAAkBW,IAAMR,EAAiBW,IAAIF,OAAO,IAAKC,SACzD5C,YAAa,EACbgB,KAAM,CAACA,EAAK6B,QAIhB,OACE,yBAAKlI,UAAU,cACb,kBAAC,IAAD,CAAOqG,KAAM,CAAEnD,YAAYyD,QAAS7C,MC1CpCyE,EAAS,CACb,MAAM,MAAM,MAAM,MAAM,MAAM,MAC9B,MAAM,MAAM,MAAM,MAAM,MAAM,OAG1BC,EAAkB,CAAC,SAAU,WAAY,UACzCC,EAAY,CAAC,QAAS,SAAU,SAAU,QAAS,SACnDC,EAAQ,CAAC,QAAS,YAAa,KAAM,MA8D5B5G,4BA5Df,WAA+BE,GAAM,IAAlB2G,EAAiB,EAAjBA,SAAiB,EACF1G,mBAAS,CACvC,EAAG,IAAO,IAAM,KAAO,IAAO,IAC9B,KAAO,KAAO,IAAO,IAAO,KAAO,MAHH,mBAC3BW,EAD2B,KACjBgG,EADiB,OAKU3G,mBAAS,CAAC,GAAI,GAAI,KAL5B,mBAK3B4G,EAL2B,KAKXC,EALW,OAMsB7G,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,KANhD,mBAM3B8G,EAN2B,KAMLC,EANK,OAOc/G,mBAAS,CAAC,GAAI,GAAI,GAAI,KAPpC,mBAO3BgH,EAP2B,KAOTC,EAPS,KAgClC,OAvBAxG,8BAAoBV,GAAK,iBAAO,CAC9BW,UAD8B,WAE5BiG,EAAYL,EAAOV,KAAI,kBAAMhF,iBAAO,EAAG,SACvCmG,EAAwBP,EAAUZ,KAAI,kBAAMhF,iBAAO,EAAG,SACtDqG,EAAoBR,EAAMb,KAAI,kBAAMhF,iBAAO,EAAG,SAE9C,IAAIsG,EAAmB,IAEjBC,EAAoBZ,EAAgBX,KAAI,SAACwB,EAAGnB,GAChD,GAAIA,IAAMM,EAAgBd,OAAS,EACjC,OAAOyB,EAGT,IAAMG,EAAmBzG,iBAAO,EAAGsG,GAGnC,OAFAA,GAAoBG,EAEbA,KAGTR,EAAkBM,QAKpB,yBAAKpJ,UAAU,OACb,kBAAC,EAAD,CAAQc,MAAM,oBAAoBoG,KAAM,gBACtC,kBAAC,EAAD,CACEZ,YAAaqC,EACb7H,MAAM,WACNsF,OAAQmC,EACRlC,KAAMzD,KAEV,kBAAC,EAAD,CAAQ9B,MAAM,kBAAkBoG,KAAM,WACpC,kBAAC,EAAD,CAAUd,OAAQoC,EAAiBnC,KAAMwC,KAE3C,kBAAC,EAAD,CAAQ/H,MAAM,wBAAwBoG,KAAM,QAC1C,kBAAC,EAAD,CACEpG,MAAM,wBACNsF,OAAQqC,EACRpC,KAAM0C,KAEV,kBAAC,EAAD,CAAQjI,MAAM,oBAAoBoG,KAAM,QACtC,kBAAC,EAAD,CACEpG,MAAM,oBACNsF,OAAQsC,EACRrC,KAAM4C,SC/DD,SAASM,IACtB,IAAMC,EAAWC,sBACXC,EAAaD,sBAFS,EAGIxH,oBAAS,GAHb,mBAGrB0G,EAHqB,KAGXgB,EAHW,KAuB5B,OAbAC,qBAAU,WAER,IAAMC,EAAW,WACf,IAAMxI,EAAQyI,SAASC,gBAAgBC,YACvCL,EAAYtI,EAAQ,MAMtB,OAHA3B,OAAOuK,iBAAiB,SAAUJ,GAClCA,IAEO,kBAAMnK,OAAOwK,oBAAoB,SAAUL,MACjD,CAACF,IAGF,yBAAKQ,GAAG,WACN,kBAACrK,EAAD,CAASC,QAAS4I,IAClB,yBAAKwB,GAAG,kBAAkBnK,UAAU,sBAClC,kBAACC,EAAD,CAAQC,gBAAiB,kBAAMyJ,GAAahB,MAC5C,yBAAK3I,UAAU,mBACb,kBAACW,EAAD,CAAWC,YAxBD,WAChB4I,EAASY,QAAQzH,YACjB+G,EAAWU,QAAQzH,eAuBb,kBAAC,EAAD,CAAOX,IAAKwH,IACZ,kBAAC,EAAD,CAASb,SAAUA,EAAU3G,IAAK0H,OChC5CW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAChB,EAAD,OAEFO,SAASU,eAAe,SZwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.6f3eb949.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nexport default function SideBar({ opened }) {\n  return (\n    <ul className={`navbar-nav bg-gradient-primary sidebar sidebar-dark accordion ${!opened ? 'toggled' : ''}`}>\n      <span className=\"hover sidebar-brand d-flex align-items-center justify-content-center\">\n        <div className=\"sidebar-brand-icon rotate-n-15\">\n          <i className=\"fas fa-laugh-wink\" />\n        </div>\n        <div className=\"sidebar-brand-text mx-3\">SB Admin <sup>2</sup></div>\n      </span>\n      <hr className=\"sidebar-divider my-0\" />\n      <li className=\"nav-item active hover\">\n        <span className=\"nav-link\">\n          <i className=\"fas fa-fw fa-tachometer-alt\" />\n          <span> Dashboard</span>\n        </span>\n      </li>\n      <hr className=\"sidebar-divider my-0\" />\n    </ul>\n  );\n}\n","import React from \"react\";\n\nexport default function TopBar({ onToggleSideBar }) {\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n      <button className=\"btn btn-link d-md-none rounded-circle mr-3\" onClick={onToggleSideBar}>\n        <i className=\"fa fa-bars\" />\n      </button>\n      <form\n        onSubmit={e => e.preventDefault()}\n        className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\n        <div className=\"input-group\">\n          <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\"\n                 aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-primary\" type=\"button\">\n                <i className=\"fas fa-search fa-sm\" />\n              </button>\n            </div>\n        </div>\n      </form>\n    </nav>\n  );\n}\n","import React from \"react\";\n\nexport default function PageTitle({ onRandomize }) {\n  return (\n    <div className=\"d-flex align-items-center justify-content-between mb-4\">\n      <h1 className=\"h3 mb-0 text-gray-800\">Dashboard</h1>\n      <button\n        type=\"button\"\n        className=\"d-none d-sm-inline-block btn btn-primary shadow-sm\"\n        onClick={onRandomize}>\n        Randomize <i className=\"fas fa-random fa-sm text-white-50 align-middle\" />\n      </button>\n      <button\n        type=\"button\"\n        className=\"d-inline-block d-sm-none btn btn-primary btn-xs shadow-sm\"\n        onClick={onRandomize}>\n        Randomize <i className=\"fas fa-random fa-sm text-white-50 align-middle\" />\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Stat({ type, title, content, icon, withProgress, progress }) {\n  return (\n    <div className=\"col-xl-3 col-md-6 mb-4\">\n      <div className={`card border-left-${type} shadow h-100 py-2`}>\n        <div className=\"card-body\">\n          <div className=\"row no-gutters align-items-center\">\n            <div className=\"col mr-2\">\n              <div\n                className={`text-xs font-weight-bold text-${type} text-uppercase mb-1`}>\n                {title}\n              </div>\n              {!withProgress && (\n                <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                  {content}\n                </div>\n              )}\n              {withProgress && (\n                <div className=\"row no-gutters align-items-center\">\n                  <div className=\"col-auto\">\n                    <div className=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\">{content}</div>\n                  </div>\n                  <div className=\"col\">\n                    <div className=\"progress progress-sm mr-2\">\n                      <div\n                        className=\"progress-bar bg-info\"\n                        role=\"progressbar\"\n                        style={{ width: `${progress}%` }}\n                        aria-valuenow={progress}\n                        aria-valuemin=\"0\"\n                        aria-valuemax=\"100\" />\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"col-auto\">\n              <i className={`fas ${icon} fa-2x text-gray-300`} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport { format } from 'currency-formatter';\nimport { random } from 'lodash';\n\nimport Stat from \"./Stat\";\n\nconst CurrencyFormatter = value => format(value, { code: 'USD', precision: 0 });\n\nfunction Stats(props, ref) {\n  const [monthlyEarnings, setMonthlyEarnings] = useState(40000);\n  const [annualEarnings, setAnnualEarnings] = useState(125000);\n  const [tasks, setTasks] = useState(50);\n  const [pendingRequests, setPendingRequests] = useState(18);\n\n  useImperativeHandle(ref, () => ({\n    randomize() {\n      const earnings = random(10000, 50000);\n      setMonthlyEarnings(earnings);\n      setAnnualEarnings(earnings * random(3, 7));\n      setTasks(random(5, 100));\n      setPendingRequests(random(5, 50));\n    }\n  }));\n\n  return (\n    <div className=\"row\">\n      <Stat\n        title=\"Earnings (Monthly)\"\n        content={CurrencyFormatter(monthlyEarnings)}\n        icon=\"fa-calendar\"\n        type=\"primary\" />\n      <Stat\n        title=\"Earnings (Annual)\"\n        content={CurrencyFormatter(annualEarnings)}\n        icon=\"fa-dollar-sign\"\n        type=\"success\" />\n      <Stat\n        withProgress\n        progress={tasks}\n        title=\"Tasks\"\n        content={`${tasks}%`}\n        icon=\"fa-dollar-sign\"\n        type=\"info\" />\n      <Stat\n        title=\"Pending Requests\"\n        content={pendingRequests}\n        icon=\"fa-comments\"\n        type=\"warning\" />\n    </div>\n  );\n}\n\nexport default forwardRef(Stats);\n","import React from \"react\";\nimport { Line as Chart, defaults } from 'react-chartjs-2';\nimport { format } from \"currency-formatter\";\nimport PropTypes from \"prop-types\";\n\ndefaults.global.defaultFontFamily = 'Nunito';\n\nconst CurrencyFormatter = value => format(value, { code: 'USD', precision: 0 });\n\nconst DEFAULT_DATA = {\n  datasets: [{\n    lineTension: 0.3,\n    backgroundColor: \"rgba(78, 115, 223, 0.05)\",\n    borderColor: \"rgba(78, 115, 223, 1)\",\n    pointRadius: 3,\n    pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\n    pointBorderColor: \"rgba(78, 115, 223, 1)\",\n    pointHoverRadius: 3,\n    pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\n    pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\n    pointHitRadius: 10,\n    pointBorderWidth: 2,\n  }],\n};\n\nconst DEFAULT_OPTIONS = {\n  maintainAspectRatio: false,\n  layout: {\n    padding: {},\n  },\n  scales: {\n    xAxes: [{\n      time: {\n        unit: 'date'\n      },\n      gridLines: {\n        display: false,\n        drawBorder: false\n      },\n    }],\n    yAxes: [{\n      ticks: {\n        maxTicksLimit: 5,\n        padding: 10,\n        callback: CurrencyFormatter,\n      },\n      gridLines: {\n        color: \"#f0f0f0\",\n        zeroLineColor: \"rgb(234, 236, 244)\",\n        drawBorder: false,\n      }\n    }],\n  },\n  legend: {\n    display: false\n  },\n  tooltips: {\n    backgroundColor: \"rgb(255,255,255)\",\n    bodyFontColor: \"#858796\",\n    titleMarginBottom: 10,\n    titleFontColor: '#6e707e',\n    titleFontSize: 14,\n    borderColor: '#dddfeb',\n    borderWidth: 1,\n    xPadding: 15,\n    yPadding: 15,\n    displayColors: false,\n    intersect: false,\n    mode: 'index',\n    caretPadding: 10,\n    callbacks: {\n      label: (tooltipItem, chart) => {\n        const datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n        return `${datasetLabel} ${CurrencyFormatter(tooltipItem.yLabel)}`;\n      }\n    }\n  }\n};\n\nfunction Line({ title, labels, data, addPadding }) {\n  DEFAULT_DATA.labels = labels;\n  DEFAULT_DATA.datasets[0].label = title;\n  DEFAULT_DATA.datasets[0].data = data;\n  DEFAULT_OPTIONS.layout.padding = !addPadding ? {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n  } : {\n    left: 10,\n    right: 25,\n    top: 25,\n    bottom: 0,\n  };\n\n  return (\n    <div className=\"chart-area\">\n      <Chart data={DEFAULT_DATA} options={DEFAULT_OPTIONS} />\n    </div>\n  );\n}\n\nLine.propTypes = {\n  title: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired,\n};\n\nexport default Line;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst SIZES = {\n  threeQuarter: \"col-sm-8\",\n  quarter: \"col-sm-4\",\n  half: \"col-sm-6\",\n};\n\nfunction Widget({ children, title, size = 'quarter' }) {\n  return (\n    <div className={SIZES[size]}>\n      <div className=\"card shadow mb-4\">\n        <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n          <h6 className=\"m-0 font-weight-bold text-primary\">{title}</h6>\n        </div>\n        <div className=\"card-body\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  size: PropTypes.oneOf(['quarter', 'threeQuarter', 'half']),\n};\n\nexport default Widget;\n","import React from \"react\";\nimport { Doughnut as Chart } from \"react-chartjs-2\";\nimport RandomColor from 'randomcolor';\nimport Color from 'color';\nimport PropTypes from \"prop-types\";\n\nconst DEFAULT_DATA = {\n  datasets: [{\n    backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],\n    hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],\n    hoverBorderColor: \"rgba(234, 236, 244, 1)\",\n  }],\n};\n\nconst DEFAULT_OPTIONS = {\n  maintainAspectRatio: false,\n  tooltips: {\n    backgroundColor: \"rgb(255,255,255)\",\n    bodyFontColor: \"#858796\",\n    borderColor: '#dddfeb',\n    borderWidth: 1,\n    xPadding: 15,\n    yPadding: 15,\n    displayColors: false,\n    caretPadding: 10,\n  },\n  legend: {\n    display: false\n  },\n  cutoutPercentage: 80,\n};\n\nfunction Doughnut({ labels, data }) {\n  DEFAULT_DATA.labels = labels;\n  DEFAULT_DATA.datasets[0].data = data;\n\n  const backgroundColors = RandomColor({\n    count: labels.length,\n    hue: 'random',\n  });\n\n  const hoverBackgroundColors = backgroundColors.map(c => Color(c).darken(0.3).string());\n\n  DEFAULT_DATA.datasets[0].backgroundColor = backgroundColors;\n  DEFAULT_DATA.datasets[0].hoverBackgroundColor = hoverBackgroundColors;\n\n  return (\n    <>\n      <div className=\"chart-pie\">\n        <Chart data={DEFAULT_DATA} options={DEFAULT_OPTIONS} />\n      </div>\n      <div className=\"mt-4 text-center small\">\n        {labels.map((label, i) => (\n          <span key={label} className=\"mr-2\">\n            <i className=\"fas fa-circle\" style={{ color: backgroundColors[i] }} />\n            {` ${label} (${data[i]})`}\n          </span>\n        ))}\n      </div>\n    </>\n  );\n}\n\nDoughnut.propTypes = {\n  labels: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n};\n\nexport default Doughnut;\n","import React from \"react\";\nimport { Bar as Chart } from \"react-chartjs-2\";\nimport RandomColor from \"randomcolor\";\nimport Color from \"color\";\n\nconst DEFAULT_OPTIONS = {\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      display: true,\n      ticks: {\n        maxTicksLimit: 10,\n        suggestedMin: 0,\n        suggestedMax: 100,\n        callback: value => `${value}%`,\n      },\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      label: (tooltipItem, chart) => {\n        const datasetLabel = chart.datasets[tooltipItem.datasetIndex].label;\n        return `${datasetLabel} - ${tooltipItem.yLabel}%`;\n      }\n    },\n  }\n};\n\nfunction Bar({ title, labels, data }) {\n  const backgroundColors = RandomColor({\n    count: labels.length,\n    hue: 'random',\n  });\n\n  DEFAULT_OPTIONS.tooltips.callbacks.title = () => title;\n\n  const datasets = labels.map((label, i) => {\n    return {\n      label,\n      backgroundColor: backgroundColors[i],\n      borderColor: backgroundColors[i],\n      hoverBackgroundColor: Color(backgroundColors[i]).darken(0.3).string(),\n      hoverBorderColor: Color(backgroundColors[i]).darken(0.3).string(),\n      borderWidth: 1,\n      data: [data[i]]\n    };\n  });\n\n  return (\n    <div className=\"chart-area\">\n      <Chart data={{ datasets }} options={DEFAULT_OPTIONS} />\n    </div>\n  );\n}\n\nexport default Bar;\n","import React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport { random } from \"lodash\";\n\nimport Line from \"../Charts/Line\";\nimport Widget from \"./Widget\";\nimport Doughnut from \"../Charts/Doughnut\";\nimport Bar from \"../Charts/Bar\";\n\nconst MONTHS = [\n  \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\n  \"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\n];\n\nconst REVENUE_SOURCES = [\"Direct\", \"Referral\", \"Social\"];\nconst DIRECTORS = [\"Aadya\", \"Sinead\", \"Palash\", \"Conor\", \"Jordi\"];\nconst TEAMS = [\"Sales\", \"Marketing\", \"HR\", \"IT\"];\n\nfunction Widgets({ isMobile }, ref) {\n  const [earnings, setEarnings] = useState([\n    0, 10000, 5000, 15000, 10000, 20000,\n    15000, 25000, 20000, 30000, 25000, 40000\n  ]);\n  const [revenueSources, setRevenueSources] = useState([55, 30, 15]);\n  const [directorsPerformance, setDirectorsPerformance] = useState([50, 70, 33, 81, 60]);\n  const [teamsPerformance, setTeamsPerformance] = useState([60, 42, 78, 89]);\n\n  useImperativeHandle(ref, () => ({\n    randomize() {\n      setEarnings(MONTHS.map(() => random(0, 60000)));\n      setDirectorsPerformance(DIRECTORS.map(() => random(0, 100)));\n      setTeamsPerformance(TEAMS.map(() => random(0, 100)));\n\n      let maxRevenueSource = 100;\n\n      const newRevenueSources = REVENUE_SOURCES.map((r, i) => {\n        if (i === REVENUE_SOURCES.length - 1) {\n          return maxRevenueSource;\n        }\n\n        const newRevenueSource = random(0, maxRevenueSource);\n        maxRevenueSource -= newRevenueSource;\n\n        return newRevenueSource;\n      });\n\n      setRevenueSources(newRevenueSources);\n    }\n  }));\n\n  return (\n    <div className=\"row\">\n      <Widget title=\"Earnings Overview\" size={\"threeQuarter\"}>\n        <Line\n          addPadding={!isMobile}\n          title=\"Earnings\"\n          labels={MONTHS}\n          data={earnings} />\n      </Widget>\n      <Widget title=\"Revenue Sources\" size={\"quarter\"}>\n        <Doughnut labels={REVENUE_SOURCES} data={revenueSources} />\n      </Widget>\n      <Widget title=\"Directors Performance\" size={\"half\"}>\n        <Bar\n          title=\"Directors Performance\"\n          labels={DIRECTORS}\n          data={directorsPerformance} />\n      </Widget>\n      <Widget title=\"Teams Performance\" size={\"half\"}>\n        <Bar\n          title=\"Teams Performance\"\n          labels={TEAMS}\n          data={teamsPerformance} />\n      </Widget>\n    </div>\n  );\n}\n\nexport default forwardRef(Widgets);\n","import React, { createRef, useEffect, useState } from \"react\";\n\nimport SideBar from \"./Components/SideBar\";\nimport TopBar from \"./Components/TopBar\";\nimport PageTitle from \"./Components/PageTitle\";\nimport Stats from \"./Components/Stats/Stats\";\nimport Widgets from \"./Components/Widgets/Widgets\";\n\nexport default function App() {\n  const statsRef = createRef();\n  const widgetsRef = createRef();\n  const [isMobile, setIsMobile] = useState(false);\n\n  const randomize = () => {\n    statsRef.current.randomize();\n    widgetsRef.current.randomize();\n  };\n\n  useEffect(() => {\n    // Close sidebar on mobile and open on desktop\n    const onResize = () => {\n      const width = document.documentElement.clientWidth;\n      setIsMobile(width < 501);\n    };\n\n    window.addEventListener('resize', onResize);\n    onResize();\n\n    return () => window.removeEventListener('resize', onResize);\n  }, [setIsMobile]);\n\n  return (\n    <div id=\"wrapper\">\n      <SideBar opened={!isMobile} />\n      <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n        <TopBar onToggleSideBar={() => setIsMobile(!isMobile)} />\n        <div className=\"container-fluid\">\n          <PageTitle onRandomize={randomize} />\n          <Stats ref={statsRef} />\n          <Widgets isMobile={isMobile} ref={widgetsRef} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./Resources/Style/app.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}